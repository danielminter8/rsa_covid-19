{"version":3,"sources":["components/mapbox.jsx","components/latest_stats.jsx","components/extra_stats.jsx","components/dataset.js","components/graphs.jsx","components/footer.jsx","pages/home.jsx","App.js","serviceWorker.js","index.js"],"names":["mapboxgl","accessToken","MyMap","props","state","map","Map","container","style","center","zoom","scrollZoom","disable","dragPan","url","on","window","setInterval","getSource","setData","addSource","type","data","addLayer","paint","id","marginBottom","position","width","height","borderRadius","React","Component","LatestStats","latest","componentDidMount","axios","get","then","result","pop","setState","displayData","div","z","length","push","className","Object","keys","values","marginTop","this","ExtraStats","latestIncrease","averageIncrease","lastUpdated","latest_increase","average_increase","time","href","dataset","covidLineGraph","cases","recoveries","deaths","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","covidBarGraph","CovidTimelineGraph","latestData","response","labels","date","datasets","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","max","Math","ceil","Number","ProvinceGraph","res","casesInProvince","province","Footer","textAlign","padding","fontSize","color","Home","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e9df94c7.chunk.js","sourcesContent":["import mapboxgl from 'mapbox-gl/dist/mapbox-gl.js';\r\nimport React from 'react';\r\n\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiaW5jcmVkaWJsZWphZ3VyIiwiYSI6ImNrOTJwM2FsNzAyM2szbW9hdWR2OXBqZjUifQ.6H9790vEmqomFGSu0Q8M0g';\r\n\r\nexport default class MyMap extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n\r\n\r\n    const map = new mapboxgl.Map({\r\n      container: 'mymap',\r\n      style: 'mapbox://styles/incrediblejagur/ck7xs2kdu00ot1ilpid6krvs7',\r\n      center: [24.991639, -28.8166236],\r\n      zoom: 4.0\r\n    });\r\n    map.scrollZoom.disable();\r\n    map.dragPan.disable()\r\n\r\n    var url = '/api/geojson';\r\n    map.on('load', function() {\r\n        window.setInterval(function() {\r\n            map.getSource('points').setData(url);\r\n        }, 2000);\r\n\r\n        map.addSource('points', { type: 'geojson', data: url });\r\n        map.addLayer({\r\n          'id': 'points',\r\n          'type': 'symbol',\r\n          'source': 'points',\r\n          'layout': {\r\n              // get the icon name from the source's \"icon\" property\r\n              // concatenate the name to get an icon from the style's sprite sheet\r\n              // 'icon-image': ['concat', ['get', 'icon'], '-15'],\r\n              // get the title name from the source's \"title\" property\r\n              'text-field': ['get', 'cases'],\r\n              'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\r\n              'text-offset': [0, 0.0],\r\n              'text-anchor': 'top'\r\n          },\r\n          paint: {\r\n            \"text-color\": \"#ffffff\"\r\n          }\r\n                  });\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div id='mymap' \r\n             style={{\r\n               marginBottom:20,\r\n              position: 'relative',\r\n              width: '100%',\r\n              height: '350px',\r\n              borderRadius:5\r\n              }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class LatestStats extends React.Component{\r\n    state = {\r\n        latest:''\r\n    }\r\n    componentDidMount = () => {\r\n        axios.get('/api/latest-stats')\r\n            .then((result) => {\r\n                let data = result.data.data\r\n                data.pop()\r\n                this.setState({ latest: data })\r\n            })\r\n        }\r\n\r\n        displayData = () => {\r\n            let { latest } = this.state\r\n            let div = [];\r\n            for (let z = 0; z < latest.length; z++) {\r\n                div.push(\r\n                    <div className=\"card\" style={{ width: '18rem' }}>\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{Object.keys(latest[z])}</h5>\r\n                            <p className=\"card-text\">{Object.values(latest[z])}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            return div\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <div className=\"card-group\" style={{ marginTop: 50 }}>\r\n                {this.displayData()}</div>\r\n            )\r\n        }\r\n\r\n\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class ExtraStats extends React.Component{\r\n    state = {\r\n        latestIncrease:'',\r\n        averageIncrease:'',\r\n        lastUpdated:''\r\n    }\r\n    componentDidMount = () => {\r\n        axios.get('/api/extra-info')\r\n            .then((result) => {\r\n                let data = result.data.data\r\n                this.setState({\r\n                    latestIncrease:data.latest_increase,\r\n                    averageIncrease: data.average_increase\r\n                })\r\n                \r\n            })\r\n            axios.get('/api/latest-stats')\r\n            .then((result) => {\r\n                let data = result.data.data\r\n                this.setState({lastUpdated:data[4].time})           \r\n            })\r\n        }\r\n\r\n    render(){\r\n        let {latestIncrease, averageIncrease, lastUpdated} = this.state;\r\n        return(\r\n              <div>\r\n                            <div className=''>\r\n                        <div className=\"card-group\" style={{ marginTop: 0 }}>\r\n                        <div className=\"card\" style={{ width: '18rem' }}>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Latest Increase</h5>\r\n        <p className=\"card-text\">{latestIncrease}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\" style={{ width: '18rem' }}>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Average Increase</h5>\r\n        <p className=\"card-text\">{averageIncrease}</p>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n\r\n                <div className=''>\r\n                        <div className=\"card-group\" style={{ marginTop: 0 }}>\r\n                        <div className=\"card\" style={{ width: '18rem' }}>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">For more info</h5>\r\n                        <p className=\"card-text\"><a href=\"https://sacoronavirus.co.za/\">sacoronavirus.co.za</a></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\" style={{ width: '18rem' }}>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Last Updated</h5>\r\n        <p className=\"card-text\">{lastUpdated}</p>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                        </div>\r\n        )\r\n    }\r\n}","const dataset = {\r\n    covidLineGraph(cases,recoveries,deaths){\r\n        return([\r\n            {\r\n                label: 'Positive Cases Identified',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(232, 87, 77)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(232, 87, 77)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: cases\r\n            },\r\n            {\r\n                label: 'Recoveries',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: recoveries\r\n            },\r\n            {\r\n                label: 'Deaths',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(0, 0, 0)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(0, 0, 0)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: deaths\r\n            }\r\n        ]\r\n        )\r\n    },\r\n\r\n    covidBarGraph(cases){\r\n        return([\r\n            {\r\n            label: 'Provinces',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            borderColor: 'rgba(0, 0, 0)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(0, 0, 0)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: cases\r\n        }\r\n    ])\r\n    }\r\n}\r\nexport default dataset;","import React from 'react';\r\nimport axios from 'axios';\r\nimport dataset from '../components/dataset';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\n\r\nexport class CovidTimelineGraph extends React.Component{\r\n    state = {\r\n        data:false,\r\n        latestData:false\r\n    }\r\n    componentDidMount = () => {\r\n        axios.get('/api/latest-stats')\r\n        .then((result) => {\r\n            let data = result.data.data\r\n            data.pop()\r\n            this.setState({ latestData: data })\r\n        })\r\n        axios.get('/api/all-stats')\r\n            .then((result) => {\r\n                let response = result.data.data\r\n\r\n                let labels = [];\r\n                let cases = [];\r\n                let recoveries = [];\r\n                let deaths = [];\r\n                for (let z = 0; z < response.length; z++) {\r\n                    labels.push(response[z].date)\r\n                    cases.push(response[z].cases)\r\n                    recoveries.push(response[z].recoveries)\r\n                    deaths.push(response[z].deaths)\r\n                }\r\n                let data = {\r\n                    labels,\r\n                    datasets: dataset.covidLineGraph(cases, recoveries, deaths)\r\n                };\r\n\r\n                this.setState({ data })\r\n            })\r\n    }\r\nrender(){\r\n    let { data,latestData } = this.state\r\n    if(data && latestData){\r\n    return(\r\n        <article className=\"canvas-container\">\r\n        <Line data={data}\r\n            options={{\r\n                maintainAspectRatio:false,\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            max: Math.ceil((Number(Object.values(latestData[1])) * 2.5) / 100) * 100\r\n                        }\r\n                    }]\r\n                }\r\n            }}\r\n        />\r\n        </article>\r\n    )\r\n        }else{ return <div></div>}\r\n}\r\n}\r\n\r\nexport class ProvinceGraph extends React.Component{\r\n    state = {\r\n        data:''\r\n    }\r\n    componentDidMount = () =>{\r\n        axios.get('/api/province-stats')\r\n        .then((result) => {\r\n            let response = result.data.data\r\n            let res = response[response.length -1]\r\n            let labels = [];\r\n            let casesInProvince = [];\r\n            for(let province in res){\r\n                if(province.length === 2 || province.length === 3 ){\r\n                labels.push(province)\r\n                casesInProvince.push(res[province])\r\n                }\r\n            }\r\n            let data = {\r\n                labels,\r\n                datasets: dataset.covidBarGraph(casesInProvince)\r\n            };\r\n            this.setState({ data })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let {data} = this.state;\r\n        if(data !== ''){\r\n        return(\r\n            <Bar\r\n            data={data}\r\n            width={100}\r\n            height={50}\r\n            options={{\r\n                // maintainAspectRatio: false\r\n            }}\r\n        />\r\n        )\r\n        }else{ return <div></div>}\r\n    }\r\n\r\n}","import React from 'react';\r\n\r\n\r\nexport default class Footer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{textAlign:\"center\", backgroundColor:\"#343a40\", padding:5}}>\r\n                <code style={{fontSize: 11, color: \"white\"}}>Made by Daniel || <a style={{color:'rgba(232, 87, 77)'}} href=\"https://github.com/incrediblejagur/rsa_covid-19/issues\">Report Bug</a>\r\n                </code>\r\n                </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport MyMap from '../components/mapbox';\r\nimport LatestStats from '../components/latest_stats';\r\nimport ExtraStats from '../components/extra_stats';\r\nimport { CovidTimelineGraph, ProvinceGraph } from '../components/graphs';\r\nimport Footer from '../components/footer';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"row centered\">\r\n                        <div className=\"mycards col-sm\">\r\n                            <LatestStats />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row centered\" style={{ marginTop: 15 }}>\r\n                        <div className=\"col-sm\">\r\n                        <CovidTimelineGraph />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row centered\" style={{ marginTop: 15 }}>\r\n                        <div className='col-sm'>\r\n                            <ProvinceGraph />\r\n                        </div>\r\n                        <div className='mycards col-sm centered' style={{marginTop:30}}>\r\n                        <ExtraStats />\r\n                    </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"\" style={{ marginTop: 15 }}>\r\n                    <MyMap />\r\n                </div>\r\n\r\n            <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Home from './pages/home';\n\nfunction App() {\n  return (\n        <div>\n  <Home />\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}