{"version":3,"sources":["components/mapbox.jsx","components/latest_stats.jsx","components/extra_stats.jsx","components/graphs.jsx","components/footer.jsx","pages/home.jsx","components/dataset.js","api/requests.js","App.js","serviceWorker.js","index.js"],"names":["mapboxgl","accessToken","MyMap","props","state","map","Map","container","style","center","zoom","scrollZoom","disable","dragPan","on","addSource","type","data","addLayer","paint","id","marginBottom","position","width","height","borderRadius","React","Component","LatestStats","this","className","marginTop","ExtraStats","latestIncrease","latestAverage","href","lastChecked","date","time","CovidTimelineGraph","dataset","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","max","Math","round","cases","length","ProvinceGraph","Footer","textAlign","backgroundColor","padding","fontSize","color","Home","latest","allStats","provinceStats","extraStats","covidLineGraph","recoveries","deaths","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","covidBarGraph","apiRequests","latestStats","axios","get","then","result","values","stats","push","Object","latest_increase","average_cases","latest_average","response","labels","z","datasets","res","casesInProvince","province","App","loading","setState","role","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a8d39583.chunk.js","sourcesContent":["import mapboxgl from 'mapbox-gl/dist/mapbox-gl.js';\r\nimport React from 'react';\r\n\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiaW5jcmVkaWJsZWphZ3VyIiwiYSI6ImNrOTJwM2FsNzAyM2szbW9hdWR2OXBqZjUifQ.6H9790vEmqomFGSu0Q8M0g';\r\n\r\nexport default class MyMap extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const map = new mapboxgl.Map({\r\n      container: 'mymap',\r\n      style: 'mapbox://styles/incrediblejagur/ck7xs2kdu00ot1ilpid6krvs7',\r\n      center: [24.991639, -28.8166236],\r\n      zoom: 4.0\r\n    });\r\n    map.scrollZoom.disable();\r\n    map.dragPan.disable()\r\n\r\n    var url = '/api/geojson';\r\n    map.on('load', function() {\r\n        // window.setInterval(function() {\r\n            // map.getSource('points').setData(url);\r\n        // }, 2000);\r\n\r\n        map.addSource('points', { type: 'geojson', data: url });\r\n        map.addLayer({\r\n          'id': 'points',\r\n          'type': 'symbol',\r\n          'source': 'points',\r\n          'layout': {\r\n              // get the icon name from the source's \"icon\" property\r\n              // concatenate the name to get an icon from the style's sprite sheet\r\n              // 'icon-image': ['concat', ['get', 'icon'], '-15'],\r\n              // get the title name from the source's \"title\" property\r\n              'text-field': ['get', 'cases'],\r\n              'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\r\n              'text-offset': [0, 0.0],\r\n              'text-anchor': 'top'\r\n          },\r\n          paint: {\r\n            \"text-color\": \"#ffffff\"\r\n          }\r\n                  });\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div id='mymap' \r\n             style={{\r\n               marginBottom:20,\r\n              position: 'relative',\r\n              width: '100%',\r\n              height: '350px',\r\n              borderRadius:5\r\n              }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport default class LatestStats extends React.Component {\r\n\r\n    render() {\r\n        let { data } = this.props;\r\n        return (\r\n            <div className=\"card-group\" style={{ marginTop: 50 }}>\r\n\r\n\r\n                <div className=\"card\" style={{ width: '18rem' }}>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Tests Conducted</h5>\r\n                        <p className=\"card-text\">{data[0]}&nbsp;</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\" style={{ width: '18rem' }}>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Positive Cases Identified</h5>\r\n                        <p className=\"card-text\">{data[1]}&nbsp;</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\" style={{ width: '18rem' }}>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Recoveries</h5>\r\n                        <p className=\"card-text\">{data[2]}&nbsp;</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\" style={{ width: '18rem' }}>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Deaths</h5>\r\n                        <p className=\"card-text\">{data[3]}&nbsp;</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\n\r\nexport default class ExtraStats extends React.Component {\r\n\r\n    render() {\r\n        let { data } = this.props;\r\n        return (\r\n            <div>\r\n                <div className=''>\r\n                    <div className=\"card-group\" style={{ marginTop: 0 }}>\r\n                        <div className=\"card\" style={{ width: '18rem' }}>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Latest Increase</h5>\r\n                                <p className=\"card-text\">{data.latestIncrease}&nbsp;</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card\" style={{ width: '18rem' }}>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Average Cases</h5>\r\n                                <p className=\"card-text\">{data.latestAverage} per day&nbsp;</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=''>\r\n                    <div className=\"card-group\" style={{ marginTop: 0 }}>\r\n                        <div className=\"card\" style={{ width: '18rem' }}>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">For more info</h5>\r\n                                <p className=\"card-text\"><a href=\"https://sacoronavirus.co.za/\">sacoronavirus.co.za</a></p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card\" style={{ width: '18rem' }}>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Last Checked</h5>\r\n                                <p className=\"card-text\">{data.lastChecked.date}&nbsp; {data.lastChecked.time}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\n\r\nexport class CovidTimelineGraph extends React.Component {\r\n\r\n    render() {\r\n        let { data } = this.props\r\n        return (\r\n            <article className=\"canvas-container\">\r\n                <Line data={data.dataset}\r\n                    options={{\r\n                        maintainAspectRatio: false,\r\n                        scales: {\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true,\r\n                                    max: Math.round(((data.cases[data.cases.length - 1] * 2.5) / 1000)) * 1000\r\n\r\n                                }\r\n                            }]\r\n                        }\r\n                    }}\r\n                />\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport class ProvinceGraph extends React.Component {\r\n\r\n\r\n    render() {\r\n        let { data } = this.props;\r\n        return (\r\n            <Bar\r\n                data={data}\r\n                width={100}\r\n                height={50}\r\n                options={{\r\n                    // maintainAspectRatio: false\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\n\r\n\r\nexport default class Footer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{textAlign:\"center\", backgroundColor:\"#343a40\", padding:5}}>\r\n                <code style={{fontSize: 11, color: \"white\"}}>Made by Daniel || <a style={{color:'rgba(232, 87, 77)'}} href=\"https://github.com/incrediblejagur/rsa_covid-19/issues\">Report Bug</a>\r\n                </code>\r\n                </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport MyMap from '../components/mapbox';\r\nimport LatestStats from '../components/latest_stats';\r\nimport ExtraStats from '../components/extra_stats';\r\nimport { CovidTimelineGraph, ProvinceGraph } from '../components/graphs';\r\nimport Footer from '../components/footer';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"row centered\">\r\n                        <div className=\"mycards col-sm\">\r\n                            <LatestStats data={this.props.latest}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row centered\" style={{ marginTop: 15 }}>\r\n                        <div className=\"col-sm\">\r\n                        <CovidTimelineGraph data={this.props.allStats}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row centered\" style={{ marginTop: 15 }}>\r\n                        <div className='col-sm'>\r\n                            <ProvinceGraph data={this.props.provinceStats}/>\r\n                        </div>\r\n                        <div className='mycards extrainfo col-sm centered' style={{marginTop:30}}>\r\n                        <ExtraStats data={this.props.extraStats} />\r\n                    </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"\" style={{ marginTop: 15 }}>\r\n                    <MyMap />\r\n                </div>\r\n\r\n            <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}","const dataset = {\r\n    covidLineGraph(cases,recoveries,deaths){\r\n        return([\r\n            {\r\n                label: 'Positive Cases Identified',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(232, 87, 77)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(232, 87, 77)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: cases\r\n            },\r\n            {\r\n                label: 'Recoveries',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: recoveries\r\n            },\r\n            {\r\n                label: 'Deaths',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(0, 0, 0)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(0, 0, 0)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: deaths\r\n            }\r\n        ]\r\n        )\r\n    },\r\n\r\n    covidBarGraph(cases){\r\n        return([\r\n            {\r\n            label: 'Provinces',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            borderColor: 'rgba(0, 0, 0)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(0, 0, 0)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: cases\r\n        }\r\n    ])\r\n    }\r\n}\r\nexport default dataset;","import axios from 'axios';\r\nimport datasets from '../components/dataset';\r\nlet lastChecked = {};\r\n const apiRequests =  {\r\n\r\n    latestStats(){\r\n   return axios.get('/api/latest-stats')\r\n        .then((result) => {\r\n            let data = result.data.data\r\n            let values = [];\r\n            for (let stats in data) {\r\n                values.push(Object.values(data[stats])[0])\r\n            }\r\n            lastChecked = data[4]\r\n            return values;\r\n        })\r\n    },\r\n\r\n    extraStats(){\r\n      return axios.get('/api/extra-stats')\r\n            .then((result) => {\r\n                let data = result.data.data\r\n               return {\r\n                    latestIncrease:data.latest_increase,\r\n                    latestAverage:data.average_cases.latest_average,\r\n                    lastChecked\r\n                }\r\n                \r\n            })\r\n\r\n    },\r\n\r\n    allStats(){\r\n       return axios.get('/api/all-stats')\r\n            .then((result) => {\r\n                let response = result.data.data\r\n\r\n                let labels = [];\r\n                let cases = [];\r\n                let recoveries = [];\r\n                let deaths = [];\r\n                for (let z = 0; z < response.length; z++) {\r\n                    labels.push(response[z].date)\r\n                    cases.push(response[z].cases)\r\n                    recoveries.push(response[z].recoveries)\r\n                    deaths.push(response[z].deaths)\r\n                }\r\n                let dataset = {\r\n                    labels,\r\n                    datasets: datasets.covidLineGraph(cases, recoveries, deaths)\r\n                };\r\n\r\n                return {dataset,cases}\r\n                // this.setState({ data, cases })\r\n            })\r\n    },\r\n\r\n    provinceStats(){\r\n       return axios.get('/api/province-stats')\r\n        .then((result) => {\r\n            let response = result.data.data\r\n            let res = response[response.length -1]\r\n            let labels = [];\r\n            let casesInProvince = [];\r\n            for(let province in res){\r\n                if(province.length === 2 || province.length === 3 ){\r\n                labels.push(province)\r\n                casesInProvince.push(res[province])\r\n                }\r\n            }\r\n            let dataset = {\r\n                labels,\r\n                datasets: datasets.covidBarGraph(casesInProvince)\r\n            };\r\n            return dataset;\r\n        })\r\n    }\r\n    \r\n}\r\n\r\nexport default apiRequests;","import React from 'react';\nimport './App.css';\nimport Home from './pages/home';\nimport apiRequests from './api/requests';\n\nexport default class App extends React.Component {\n  state = {\n    loading: true\n  }\n async componentDidMount() {\n    this.setState({\n      latestStats: await apiRequests.latestStats(),\n      extraStats: await apiRequests.extraStats(),\n      allStats: await apiRequests.allStats(),\n      provinceStats: await apiRequests.provinceStats(),\n      loading: false\n    })\n  }\n\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"jumbotron jumbotron-fluid\">\n          <div className=\"container\">\n            <h2 className=\"display-4\">Crunching Data <p className=\"spinner-border text-primary\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </p></h2>\n            <p>If loading persists, <a href=\"/\">Click Me</a></p>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"render\">\n          <Home latest={this.state.latestStats}\n                extraStats={this.state.extraStats}\n                allStats={this.state.allStats}\n                provinceStats={this.state.provinceStats}\n          />\n        </div>\n      )\n    }\n  }\n}\n// export default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}