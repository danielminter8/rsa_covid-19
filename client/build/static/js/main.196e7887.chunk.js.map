{"version":3,"sources":["components/mapbox_layers/data.js","components/mapbox_layers/layers.js","components/mapbox.jsx","components/latest_stats.jsx","components/extra_stats.jsx","components/graphs.jsx","components/footer.jsx","components/map_key.js","pages/home.jsx","components/dataset.js","api/requests.js","App.js","index.js"],"names":["colorArray","provinces","mapLayers","map","z","length","provinceGeoJSON","addSource","type","data","addLayer","mapboxgl","accessToken","MyMap","Map","container","style","center","zoom","scrollZoom","disable","dragPan","on","paint","id","marginBottom","position","width","height","borderRadius","React","Component","LatestStats","this","props","className","marginTop","ExtraStats","latestIncrease","href","lastChecked","ProvinceGraph","options","Footer","textAlign","backgroundColor","padding","fontSize","color","MapKey","buildKey","keys","provinceCode","map_key","push","Home","latest","provinceStats","extraStats","dataset","covidLineGraph","cases","recoveries","deaths","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","covidBarGraph","apiRequests","latestStats","axios","get","then","result","values","stats","Object","time","date","latest_increase","latestAverage","average_cases","latest_average","allStats","response","labels","datasets","res","casesInProvince","province","App","state","loading","setState","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.196e7887.chunk.js","sourcesContent":["export let colorArray = ['#FF6633', '#FFB399', '#FF33FF', '#EDED00', '#00B3E6', \n\t\t  '#E6B333', '#3366E6', '#999966', '#99FF99'];\nexport let provinces = ['WC', 'GT','KZN','LIM','MP','NC','NW','FS','EC']\n\n","import {colorArray,provinces } from './data';\n\nconst mapLayers = (map) => {\n    for (let z = 0; z < provinces.length; z++) {\n        var provinceGeoJSON = `https://mapit.code4sa.org/area/MDB:${provinces[z]}.geojson`;\n            map.addSource(provinces[z], { type: 'geojson', data: provinceGeoJSON });\n            map.addLayer({\n                'id': provinces[z],\n                'type': 'fill',\n                'source': provinces[z],\n                'paint': {\n                    'fill-color': colorArray[z],\n                    'fill-opacity': 0.8\n                }\n            });\n    }\n}\n\nexport default mapLayers;","import mapboxgl from 'mapbox-gl/dist/mapbox-gl.js';\nimport React from 'react';\nimport mapLayers from './mapbox_layers/layers';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaW5jcmVkaWJsZWphZ3VyIiwiYSI6ImNrOTJwM2FsNzAyM2szbW9hdWR2OXBqZjUifQ.6H9790vEmqomFGSu0Q8M0g';\n\nexport default class MyMap extends React.Component{\n\n  componentDidMount() {\n\n    const map = new mapboxgl.Map({\n      container: 'mymap',\n      style: 'mapbox://styles/incrediblejagur/ck7xs2kdu00ot1ilpid6krvs7',\n      center: [24.991639, -28.8166236],\n      zoom: 4.0\n    });\n    map.scrollZoom.disable();\n    map.dragPan.disable()\n\n    var url = '/api/geojson';\n    map.on('load', function() {\n        mapLayers(map);\n\n        map.addSource('points', { type: 'geojson', data: url });\n        map.addLayer({\n          'id': 'points',\n          'type': 'symbol',\n          'source': 'points',\n          'layout': {\n              'text-field': ['get', 'cases'],\n              'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n              'text-offset': [0, 0.0],\n              'text-anchor': 'top'\n          },\n          paint: {\n            \"text-color\": \"#ffffff\"\n          }\n                  });\n    });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div id='mymap' \n             style={{\n               marginBottom:20,\n              position: 'relative',\n              width: '100%',\n              height: '350px',\n              borderRadius:5\n              }}\n        />\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\n\nexport default class LatestStats extends React.Component {\n\n    render() {\n        let { data } = this.props;\n        let width: \"18rem\"\n        return (\n            <div className=\"card-group\" style={{ marginTop: 50 }}>\n\n\n                <div className=\"card\" style={{ width }}>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Tests Conducted</h5>\n                        <p className=\"card-text\">{data[0]}&nbsp;</p>\n                    </div>\n                </div>\n\n                <div className=\"card\" style={{ width }}>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Positive Cases Identified</h5>\n                        <p className=\"card-text\">{data[1]}&nbsp;</p>\n                    </div>\n                </div>\n\n                <div className=\"card\" style={{ width }}>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Recoveries</h5>\n                        <p className=\"card-text\">{data[2]}&nbsp;</p>\n                    </div>\n                </div>\n\n                <div className=\"card\" style={{ width }}>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Deaths</h5>\n                        <p className=\"card-text\">{data[3]}&nbsp;</p>\n                    </div>\n                </div>\n\n                <div className=\"card\" style={{ width }}>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Vaccines Administered</h5>\n                        <p className=\"card-text\">{data[4]}&nbsp;</p>\n                    </div>\n                </div>\n\n\n            </div>\n        )\n    }\n\n\n}","import React from 'react';\n\nexport default class ExtraStats extends React.Component {\n\n    render() {\n        let { data } = this.props;\n        return (\n            <div>\n                <div className=''>\n                    <div className=\"card-group\" style={{ marginTop: 0 }}>\n                        <div className=\"card\" style={{ width: '18rem' }}>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Latest Increase</h5>\n                                <p className=\"card-text\">{data.latestIncrease}&nbsp;</p>\n                            </div>\n                        </div>\n                        <div className=\"card\" style={{ width: '18rem' }}>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Alert:</h5>\n                                <p className=\"card-text\">Stay Safe &#128591;</p>\n                            </div>\n                        </div>\n                    </div>\n                </div> \n\n                <div className=''>\n                    <div className=\"card-group\" style={{ marginTop: 0 }}>\n                        <div className=\"card\" style={{ width: '18rem' }}>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">For more info</h5>\n                                <p className=\"card-text\"><a href=\"https://sacoronavirus.co.za/\">sacoronavirus.co.za</a></p>\n                            </div>\n                        </div>\n                        <div className=\"card\" style={{ width: '18rem' }}>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Last Updated</h5>\n                                <p className=\"card-text\">{data.lastChecked}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\n\nexport class CovidTimelineGraph extends React.Component {\n\n    render() {\n        let { data } = this.props\n        return (\n            <article className=\"canvas-container\">\n                <Line data={data.dataset}\n                    options={{\n                        maintainAspectRatio: false,\n                        scales: {\n                            yAxes: [{\n                                ticks: {\n                                    beginAtZero: true,\n                                    max: Math.round(((data.cases[data.cases.length - 1] * 2.5) / 1000)) * 1000\n\n                                }\n                            }]\n                        }\n                    }}\n                />\n            </article>\n        )\n    }\n}\n\nexport class ProvinceGraph extends React.Component {\n\n\n    render() {\n        let { data } = this.props;\n        return (\n            <Bar\n                data={data}\n                width={100}\n                height={50}\n                options={{\n                    // maintainAspectRatio: false\n                }}\n            />\n        )\n    }\n\n}","import React from 'react';\n\n\nexport default class Footer extends React.Component {\n\n    render() {\n        return (\n            <div style={{textAlign:\"center\", backgroundColor:\"#343a40\", padding:5}}>\n                <code style={{fontSize: 11, color: \"white\"}}>Made by Daniel || <a style={{color:'rgba(232, 87, 77)'}} href=\"https://github.com/incrediblejagur/rsa_covid-19/issues\">Report Bug</a>\n                </code>\n                </div>\n        )\n    }\n}","import React from 'react';\nimport {colorArray,provinces } from './mapbox_layers/data';\n\nexport default class MapKey extends React.Component{\n\n    buildKey = () => {\n        let keys = [<div className=\"mapkeys\">Provinces</div>];\n        for(let z = 0; z < provinces.length;z++){\n            let provinceCode = provinces[z]\n            if(provinceCode === 'GT') provinceCode = 'GP'\n            if(provinceCode === 'LIM') provinceCode = 'LP'\n        let map_key = <div className=\"mapkeys\"><span className=\"key\" style={{\"backgroundColor\": colorArray[z]}}></span>{provinceCode}</div>\n        keys.push(map_key)    \n    }\n    return keys;\n    }\n\n    render(){\n        return(\n            <div id=\"\" className=\"legend\">\n            {this.buildKey()}\n            </div>\n\n        )\n    }\n\n}\n","import React from 'react';\nimport MyMap from '../components/mapbox';\nimport LatestStats from '../components/latest_stats';\nimport ExtraStats from '../components/extra_stats';\nimport { CovidTimelineGraph, ProvinceGraph } from '../components/graphs';\nimport Footer from '../components/footer';\nimport MapKey from '../components/map_key';\n\nexport default class Home extends React.Component {\n\n    render() {\n        return (\n            <div>\n\n\n                <div className=\"container\">\n\n                    <div className=\"row centered\">\n                        <div className=\"mycards col-sm\">\n                            <LatestStats data={this.props.latest}/>\n                            <code style={{fontSize:\"10px\"}}>Data scraped from sacoronavirus.co.za (Scraper is automated and run's once a day)</code>\n                        </div>\n                    </div>\n                    {/* Graph disabled because past data is not reliable */}\n                    {/* <div className=\"row centered\" style={{ marginTop: 15 }}>\n                        <div className=\"col-sm\">\n                        <CovidTimelineGraph data={this.props.allStats}/>\n                        </div>\n                    </div> */} \n                    <div className=\"row centered\" style={{ marginTop: 15 }}>\n                        <div className='col-sm'>\n                            <ProvinceGraph data={this.props.provinceStats}/>\n                        <code style={{fontSize:\"10px\"}}>Provincial data provided by (2019-nCoV Data Repository for SA) <a href=\"https://github.com/dsfsi/covid19za\">github.com/dsfsi/covid19za</a></code>\n                        </div>\n                        <div className='mycards extrainfo col-sm centered' style={{marginTop:30}}>\n                        <ExtraStats data={this.props.extraStats} />\n                    </div>\n                    </div>\n\n                </div>\n\n\n\n                <div className=\"\" style={{ marginTop: 20 }}>\n                    <MyMap />\n                    <MapKey />\n                </div>\n\n            <Footer />\n            </div>\n        )\n    }\n}","const dataset = {\n    covidLineGraph(cases,recoveries,deaths){\n        return([\n            {\n                label: 'Positive Cases Identified',\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: 'rgba(75,192,192,0.4)',\n                borderColor: 'rgba(232, 87, 77)',\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(232, 87, 77)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: cases\n            },\n            {\n                label: 'Recoveries',\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: 'rgba(75,192,192,0.4)',\n                borderColor: 'rgba(75,192,192,1)',\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(75,192,192,1)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: recoveries\n            },\n            {\n                label: 'Deaths',\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: 'rgba(75,192,192,0.4)',\n                borderColor: 'rgba(0, 0, 0)',\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(0, 0, 0)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: deaths\n            }\n        ]\n        )\n    },\n\n    covidBarGraph(cases){\n        return([\n            {\n            label: 'Provinces',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(0, 0, 0)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(0, 0, 0)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: cases\n        }\n    ])\n    }\n}\nexport default dataset;","import axios from 'axios';\nimport datasets from '../components/dataset';\nlet lastChecked = {};\n const apiRequests =  {\n\n    latestStats(){\n   return axios.get('/api/latest-stats')\n        .then((result) => {\n            let data = result.data.data\n            let values = [];\n            for (let stats in data) {\n                values.push(Object.values(data[stats])[0])\n            }\n            lastChecked = `${data[5].time} ${data[5].date}`\n            return values;\n        })\n    },\n\n    extraStats(){\n      return axios.get('/api/extra-stats')\n            .then((result) => {\n                let data = result.data.data\n               return {\n                    latestIncrease:data.latest_increase,\n                    latestAverage:data.average_cases.latest_average,\n                    lastChecked\n                }\n                \n            })\n\n    },\n\n    allStats(){\n       return axios.get('/api/all-stats')\n            .then((result) => {\n                let response = result.data.data\n\n                let labels = [];\n                let cases = [];\n                let recoveries = [];\n                let deaths = [];\n                for (let z = 0; z < response.length; z++) {\n                    labels.push(response[z].date)\n                    cases.push(response[z].cases)\n                    recoveries.push(response[z].recoveries)\n                    deaths.push(response[z].deaths)\n                }\n                let dataset = {\n                    labels,\n                    datasets: datasets.covidLineGraph(cases, recoveries, deaths)\n                };\n\n                return {dataset,cases}\n                // this.setState({ data, cases })\n            })\n    },\n\n    provinceStats(){\n       return axios.get('/api/province-stats')\n        .then((result) => {\n            let response = result.data.data\n            let res = response[response.length -1]\n            let labels = [];\n            let casesInProvince = [];\n            for(let province in res){\n                if(province.length === 2 || province.length === 3 ){\n                labels.push(province)\n                casesInProvince.push(res[province])\n                }\n            }\n            let dataset = {\n                labels,\n                datasets: datasets.covidBarGraph(casesInProvince)\n            };\n            return dataset;\n        })\n    }\n    \n}\n\nexport default apiRequests;","import React from 'react';\nimport './styling/App.css';\nimport Home from './pages/home';\nimport apiRequests from './api/requests';\n\nexport default class App extends React.Component {\n  state = {\n    loading: true\n  }\n async componentDidMount() {\n    this.setState({\n      latestStats: await apiRequests.latestStats(),\n      extraStats: await apiRequests.extraStats(),\n      allStats: await apiRequests.allStats(),\n      provinceStats: await apiRequests.provinceStats(),\n      loading: false\n    })\n  }\n\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"jumbotron jumbotron-fluid\">\n          <div className=\"container\">\n            <h2 className=\"display-4\">Crunching Data <p className=\"spinner-border text-primary\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </p></h2>\n            <p>If loading persists, <a href=\"/\">Click Me</a></p>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"render\">\n          <Home latest={this.state.latestStats}\n                extraStats={this.state.extraStats}\n                allStats={this.state.allStats}\n                provinceStats={this.state.provinceStats}\n          />\n        </div>\n      )\n    }\n  }\n}\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styling/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}